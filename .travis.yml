language: python
python:
  - "3.7"
sudo: required
env:
  global:
  - TRAVIS_CI_OPERATOR=1
  - secure: "L2+magDtNAe7hKqOfCIkFEFkC01gjMhQsQbChwFd1ZEPa4tqX0yNgCoflghYIVfORsol/Uw3LRumiQNnJLGH4ft3NS7/azBWYLCbQkZduqJhFqYGbBuVIYlQTe1ZjrIxxV/McP0Fadha7fSS2AiyrVuPbvZSAPU0mCLz7LZazisYJg7dqNNZZTkvLEKbi0t6u+saDGUdvFqWlxG93QRJFpd4oCJ7l1K12MDouMik1b1KA5E6NWnU+LbT1wPJx3komqWE5qaM3uKs+3d2/7KTrXkXbPMExipAMGzXB4Z89hNwglFzdo0vCdM2NXrUv32O+9WoGdblfq6qQ8LU6XkyDwWP/QYz0mbAYAEtNiNAfGu1JaQ1ntH/mxyseY/ec1FnAS7TNr7zx/CUAvrs2giPB2z46nOF2KNnXlc7b04DP3OYzZIj3kmLkiF7QN2ERYNiknzHIv961DRs2k8jg5YFmz92smBqeYoi7268VtL6/LIErOubDe4jfVQPMHoP8Nn5+jcOn4MoVjh9GmduTXzQYcOCZKlJehOC7kaYPJkage8xSSjf1bMZqfstQgrhIg8R1aYw+leGW4hzegDV6qPcgToGVLloerMVbdGR9k1T6X6XsIlU7FXs5U8IJS4xiwwq8Qjc/ZMvMsgD697wyG1Yf6hUSK//kZVqkbEiGF/QLFA="
  - secure: "Hz/RBOEQRra7n2AI6r8jo0bN2QHBtZO8GVb2gMNuAZJ7SwBVT2RazZ9MxoHPrKIZ77ThVutwIk/afyjaVHLN6KO74iT597Fw8onKpX88TXfD9/01yE6elMasmlrGG7Z2VrqOZmqz1g2wTwRNXtMv0L7bDv2M94bcjW+b67g9ddaN58kX6xSjizjAmKOkxuW+F804EpEpmceu1VWwntSUukpZCCV82UiwOJekAhTNVpp7J4DEDaJBch8l1C3fNaPeADRSwo50eCdICsQ34rgkHevWVeY2L7er+VpCIfAMQO/wKazc+zBkcb9gH78gVEGjgix2WVmUDfdjaJjAYwPSkj+TvCG9OXjLcgdjCOWqO+BxqpmAIKpjDk2FsfwRBqHMolc+J/q/IhCqVD6Z57CzfM4QfAxNmWd+zxL9GVdINtJWiDyh8HWxPVqskrO+zTzM/YIyp/7x/1b16URi74f/KzwV0cdi3UI+ktn3FRYs3wVbI6z8vOT40YsOQoXsZVtcpVYHKkY6qgcJzT4OVc+PUbFWM2C/j1B67WmOyljRKDx+FFP98e3gZsk+Uqg+inYpm41Z6XXJnoZ96/qobIBmXIPqiQm92EpokEDe6+HAMW4nO1YoK65SKkbK5TP4RjoJAeuLA0g38XvlVAYk5ZNJEeNw9YR0jOXWTq/GQJM3C1I="
  - secure: "2icr/toZ9wC1NkClU3jtsULaU0gL54ZqkYlg2ip7zRuHDroxz+lIQKuZU33LfM8Z2GYOLYmawNAr4ucKJYtUPhz7+a+f1SwGh8KwG1jfWoIV1UEx/SV+exVBIl+eiK6Yh58+k1i6Xosw/Zq2Y+qmLCCiPLL9q3RavIbaYKAFhiYzwBruiZISXQuy9dsRf5xq8hb9ASIcFlUbxAl1mrmpxzFaXR433Vgmi2sRWRJd5xgOcOVIGOX9IzLxvVG5truwCus6k3AdMsg6XF1M36ExDH9xb5RkOdGY/xG2RctQHMu8inTD+Tri8R7vVtZ+NR3MSFOocd8ccO0CzjAwTddLHh7zhR1X9Qvknbxor42ksfcHZ7n2lVGhJ7tZ6r4VoFBikLW/7YnsMwp+KxYyJnJYSgSllhMjLvqITyAwhPE6QiyuR6TUJ0ni3TR8DcXv1c0bXvFVH9incoeEWT8AqhheTXpVhc2OZ9eP1Ymu6aRb2P6xILD0RT1L0/7qWeNOKsJlZTuydM6hwZvcuzkJK72wROYq1zgjW6xVnF94RM3ROln8WDwOCYo0aCU1RZ0UfUvnA/AsYiHMsmppESwcsnylWsRQM93BR+s4fOlSnpiV04dzDYqRi/vx7F0JebgS6MWf0kbjNKZISgRY4boE/n/CW6DTMRoaCZdmWAfpsg4JfMs="
  - secure: "TPSt3h0GJhGficZDpRNsesLtD4vG1uBWe1FoiztWCm1IYTu1rgTlH6PmwJqDevQ5N13RHElfsfHbrAzvOQ0ecCTxcWpX9xuz0ULYNQ18M5TJn6lWGoyzq7pDDS9feEQqVXC+HTUcFpT3e9hxy8H36RlDHcymFV6F4NBEnnDGXEm0jg5dy3zN99nd7127H1kWYf+zVbKd1bBQnxeuJiXA0c+MuByDmopJwbpNgUbfpl84YSBQuoelene5eycWMO6mNYb7N39o6Bs4LRiOyH3CcnDKvHcwvFwsHvvNmDOyIMqGYQHQiS1088GNF1Z01kdTHYhyF7gWZCUqi1gbfl6gPKgWAjmwFpVu4ao6mColrx1ZowlChAiayUVQVQ32Y7PckC6Na+wVGYANv0sr+hCueHvQQbyb1rYANay1fMYGWnw9Rib4aAGf5OfT151pqcc1NoIo10ClkCQwvcm7NOK6Pqp0uh2MKTJI7vMgm3UlvDR0EnHNL8+aeZvPvkAYm3dL5KvSPnTMdbE42LKSBlCukSTW16kccgX2iN/XrDNw68vvH/rdZKYqucCvezrrhxWRwSTignUKymNNfweg+HolFqNPZ1fm6hL5Zt/z8HehxXVeI4VD80Il6sGtQJP712hurxwusbYBybWrvR9gVyOL0hRmT5HCxtrooSidoe7xxmA="
services:
  - docker

jobs:
  include:
    - stage: Cluster Providers
      name: minikube
      env:
        - K8_PROVIDER=minikube
        - K8_VERSION=v1.16.0
        - CHANGE_MINIKUBE_NONE_USER=true
        - CCO_INTERACTIVE_CI=interactive.yaml
        - HELM_VERSION=v2.16.1
      before_install: pip install -e .
      install: bash .travis.sh install-tools
      before_script:
        - minikube config set cpus 4 && minikube config set memory 8192 && minikube config set vm-driver none && minikube config set kubernetes-version "${K8_VERSION}"
        - sudo minikube start
      script:
        - ckan-cloud-operator cluster initialize --cluster-provider=minikube || travis_terminate 1;
        - sleep 60 && kubectl get ns && kubectl get pods -n ckan-cloud
        - ckan-cloud-operator ckan instance create helm --instance-id a-ckan-instance --instance-name a-ckan-instance --update sample-values/values.datagov.yaml
      after_script:
        - minikube delete
    - name: azure
      env:
        - K8_PROVIDER=azure
        - CCO_INTERACTIVE_CI=interactive.yaml
        - HELM_VERSION=v2.16.1
        - KUBECONFIG=kubeconfig_terraform-cco
      before_install: pip install -e .
      install: bash .travis.sh install-tools
      script:
        - az login -u $AZ_USER -p $AZ_PASSWORD
        - az account list-locations
        - cd terraform/azure &&
          terraform init -input=false &&
          terraform validate &&
          terraform apply -input=false -auto-approve &&
          terraform output cco-interactive-yaml > interactive.yaml &&
          terraform output kube_config > kubeconfig_terraform-cco
        - cat kubeconfig_terraform-cco
        - kubectl get pods --all-namespaces
        - ckan-cloud-operator cluster initialize --interactive --cluster-provider=azure
        - kubectl get ns && kubectl get pods -n ckan-cloud
        - ckan-cloud-operator ckan instance create helm --instance-id a-ckan-instance --instance-name a-ckan-instance --update ../../sample-values/values.datagov.yaml
        - kubectl -n a-ckan-instance describe pods
      after_success:
        - ./terraform destroy -auto-approve
      after_failure:
        - ./terraform destroy -auto-approve
    - stage: Deploy
      install:
      - curl -L https://raw.githubusercontent.com/datopian/travis-ci-operator/master/travis_ci_operator.sh > $HOME/bin/travis_ci_operator.sh
      - bash $HOME/bin/travis_ci_operator.sh init
      - travis_ci_operator.sh docker-login
      - bash .travis.sh install
      script:
      - bash .travis.sh script
      - bash .travis.sh test
      deploy:
        - provider: script
          skip_cleanup: true
          script: bash .travis.sh deploy
          on:
            branch: master
        - provider: script
          skip_cleanup: true
          script: bash .travis.sh deploy
          on:
            tags: true
